/*Generated by WaveMaker Studio*/

package com.testdb_hsql.rolodex;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/


import javax.persistence.PrimaryKeyJoinColumn;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;


import java.util.Arrays;

import javax.persistence.Transient;
import javax.persistence.CascadeType;
import javax.persistence.UniqueConstraint;




/**
 * Store generated by hbm2java
 */
@Entity
@Table(name="STORE"
    ,schema="PUBLIC"
)
public class Store  implements java.io.Serializable
 {


private Integer storeId;
private Address address;
private Set<Inventory> inventories = new HashSet<Inventory>(0);
private Set<Customer> customers = new HashSet<Customer>(0);

    public Store() {
    }



     @Id @GeneratedValue(strategy=IDENTITY)

    

    @Column(name="STORE_ID", nullable=false)
    public Integer getStoreId() {
        return this.storeId;
    }
    
    public void setStoreId(Integer storeId) {
        this.storeId = storeId;
    }

@ManyToOne(fetch=FetchType.EAGER)
    @JoinColumn(name="ADDRESS_ID", nullable=false)
    public Address getAddress() {
        return this.address;
    }
    
    public void setAddress(Address address) {
        this.address = address;
    }

@OneToMany(fetch=FetchType.LAZY, cascade = {CascadeType.ALL}, mappedBy="store")
    public Set<Inventory> getInventories() {
        return this.inventories;
    }
    
    public void setInventories(Set<Inventory> inventories) {
        this.inventories = inventories;
    }

@OneToMany(fetch=FetchType.LAZY, cascade = {CascadeType.ALL}, mappedBy="store")
    public Set<Customer> getCustomers() {
        return this.customers;
    }
    
    public void setCustomers(Set<Customer> customers) {
        this.customers = customers;
    }



public boolean equals(Object o) {
         if (this == o)
         return true;
		 if ( (o == null ) )
		 return false;
		 if ( !(o instanceof Store) )
		 return false;

		 Store that = ( Store ) o;

		 return ( (this.getStoreId()==that.getStoreId()) || ( this.getStoreId()!=null && that.getStoreId()!=null && this.getStoreId().equals(that.getStoreId()) ) );

   }

   public int hashCode() {
         int result = 17;

         result = 37 * result + ( getStoreId() == null ? 0 : this.getStoreId().hashCode() );

         return result;
     }


}

